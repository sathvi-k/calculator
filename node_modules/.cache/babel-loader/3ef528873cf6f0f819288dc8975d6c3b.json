{"ast":null,"code":"var _jsxFileName = \"/Users/sathvika/Documents/DALI/codechallenge/react-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css';\n\nclass Counter extends Component {\n  constructor() {\n    super(); // Error 1\n\n    this.state = {\n      counter: 0\n    };\n    this.increment = this.increment.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(CounterButton, {\n      by: 1,\n      incrementMethod: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(CounterButton, {\n      by: 5,\n      incrementMethod: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(CounterButton, {\n      by: 10,\n      incrementMethod: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n  increment() {\n    console.log('increment from parent'); //this.state.counter++; // Bad Practice\n    //this.setState({\n    //counter: this.state.counter //+ this.props.by\n    //});\n  }\n\n}\n\nclass CounterButton extends Component {\n  constructor() {\n    super(); // Error 1\n\n    this.state = {\n      counter: 0\n    };\n    this.increment = this.increment.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(CounterButton, {\n      by: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(CounterButton, {\n      by: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(CounterButton, {\n      by: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    //render = () => {\n    //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"+\", this.props.by), React.createElement(\"span\", {\n      className: \"count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.counter));\n  }\n\n}\n\nCounterButton.defaultProps = {\n  by: 1\n};\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"sources":["/Users/sathvika/Documents/DALI/codechallenge/react-app/src/components/counter/Counter.jsx"],"names":["React","Component","PropTypes","Counter","constructor","state","counter","increment","bind","render","console","log","CounterButton","props","by","defaultProps","propTypes","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAE5BG,EAAAA,WAAW,GAAG;AACV,YADU,CACD;;AACT,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,CAAnB;AAAsB,MAAA,eAAe,EAAE,KAAKF,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,CAAnB;AAAsB,MAAA,eAAe,EAAE,KAAKA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,EAAnB;AAAuB,MAAA,eAAe,EAAE,KAAKA,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAEDA,EAAAA,SAAS,GAAI;AACTG,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EADS,CAET;AACA;AACI;AACJ;AACH;;AA1B2B;;AA8BhC,MAAMC,aAAN,SAA4BX,SAA5B,CAAsC;AAClCG,EAAAA,WAAW,GAAG;AACV,YADU,CACD;;AACT,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AACDA,EAAAA,MAAM,GAAI;AACV;AACI;AACA,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKF,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmC,KAAKM,KAAL,CAAWC,EAA9C,CADJ,EAEI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKT,KAAL,CAAWC,OAApC,CAFJ,CADJ;AAMH;;AA1BiC;;AA6BtCM,aAAa,CAACG,YAAd,GAA6B;AACzBD,EAAAA,EAAE,EAAG;AADoB,CAA7B;AAIAF,aAAa,CAACI,SAAd,GAA0B;AACtBF,EAAAA,EAAE,EAAGZ,SAAS,CAACe;AADO,CAA1B;AAKA,eAAed,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Counter.css'\n\nclass Counter extends Component {\n    \n    constructor() {\n        super(); // Error 1\n        this.state = {\n            counter: 0\n        }\n        this.increment = this.increment.bind(this); \n    }\n\n    render() {\n        return (\n            <div className=\"counter\">\n                <CounterButton by={1} incrementMethod={this.increment}/>\n                <CounterButton by={5} incrementMethod={this.increment}/>\n                <CounterButton by={10} incrementMethod={this.increment}/>\n            </div>\n        )\n    }\n\n    increment () {\n        console.log('increment from parent')\n        //this.state.counter++; // Bad Practice\n        //this.setState({\n            //counter: this.state.counter //+ this.props.by\n        //});\n    }\n\n}\n\nclass CounterButton extends Component {\n    constructor() {\n        super(); // Error 1\n        this.state = {\n            counter: 0\n        }\n        this.increment = this.increment.bind(this);\n    }\n    render() {\n        return (\n            <div className=\"counter\">\n                <CounterButton by={1}/>\n                <CounterButton by={5}/>\n                <CounterButton by={10}/>\n            </div>\n        )\n    }\n    render () {\n    //render = () => {\n        //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n        return(\n            <div className=\"counter\">\n                <button onClick={this.increment}>+{this.props.by}</button>\n                <span className=\"count\">{this.state.counter}</span>\n            </div>\n        )\n    }\n}\n\nCounterButton.defaultProps = {\n    by : 1\n}\n\nCounterButton.propTypes = {\n    by : PropTypes.number\n}\n\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}