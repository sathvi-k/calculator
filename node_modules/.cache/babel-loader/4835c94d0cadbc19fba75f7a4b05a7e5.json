{"ast":null,"code":"var _jsxFileName = \"/Users/sathvika/Documents/DALI/codechallenge/react-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css';\n\nclass Counter extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(CounterButton, {\n      by: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), React.createElement(CounterButton, {\n      by: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(CounterButton, {\n      by: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass CounterButton extends Component {\n  // Define the initial state in a constructor\n  // state => counter 0\n  constructor() {\n    super(); // Error 1\n\n    this.render = () => {\n      //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n      return React.createElement(\"div\", {\n        className: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"+\", this.props.by), React.createElement(\"span\", {\n        className: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.state.counter));\n    };\n\n    this.increment = () => {\n      console.log('increment'); //this.state.counter++; // Bad Practice\n\n      this.setState({\n        counter: this.state.counter + this.props.by\n      });\n    };\n\n    this.state = {\n      counter: 0\n    }; //this.increment = this.increment.bind(this); // Don't need with arrow functions\n  }\n\n}\n\nCounterButton.defaultProps = {\n  by: 1\n};\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nexport default CounterButton;","map":{"version":3,"sources":["/Users/sathvika/Documents/DALI/codechallenge/react-app/src/components/counter/Counter.jsx"],"names":["React","Component","PropTypes","Counter","render","CounterButton","constructor","increment","props","by","state","counter","console","log","setState","defaultProps","propTypes","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC5BG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAT2B;;AAYhC,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAElC;AACA;AACAK,EAAAA,WAAW,GAAE;AACT,YADS,CACA;;AADA,SASbF,MATa,GASJ,MAAM;AACX;AACA,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKG,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmC,KAAKC,KAAL,CAAWC,EAA9C,CADJ,EAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,KAAKC,KAAL,CAAWC,OAApC,CAFJ,CADJ;AAMH,KAjBY;;AAAA,SAmBbJ,SAnBa,GAmBD,MAAM;AACdK,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADc,CAEd;;AACA,WAAKC,QAAL,CAAc;AACVH,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB,KAAKH,KAAL,CAAWC;AAD/B,OAAd;AAGH,KAzBY;;AAET,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb,CAFS,CAMT;AACH;;AAXiC;;AAgCtCN,aAAa,CAACU,YAAd,GAA6B;AACzBN,EAAAA,EAAE,EAAG;AADoB,CAA7B;AAIAJ,aAAa,CAACW,SAAd,GAA0B;AACtBP,EAAAA,EAAE,EAAGP,SAAS,CAACe;AADO,CAA1B;AAKA,eAAeZ,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Counter.css'\n\nclass Counter extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <CounterButton by={1}/>\n                <CounterButton by={5}/>\n                <CounterButton by={10}/>\n            </div>\n        )\n    }\n}\n\nclass CounterButton extends Component {\n\n    // Define the initial state in a constructor\n    // state => counter 0\n    constructor(){\n        super(); // Error 1\n        this.state = {\n            counter: 0\n        }\n\n        //this.increment = this.increment.bind(this); // Don't need with arrow functions\n    }\n\n    render = () => {\n        //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n        return(\n            <div className=\"counter\">\n                <button onClick={this.increment}>+{this.props.by}</button>\n                <span className=\"count\">{this.state.counter}</span>\n            </div>\n        )\n    }\n    \n    increment = () => {\n        console.log('increment')\n        //this.state.counter++; // Bad Practice\n        this.setState({\n            counter: this.state.counter + this.props.by\n        });\n    }\n}\n\nCounterButton.defaultProps = {\n    by : 1\n}\n\nCounterButton.propTypes = {\n    by : PropTypes.number\n}\n\n\nexport default CounterButton"]},"metadata":{},"sourceType":"module"}