{"ast":null,"code":"var _jsxFileName = \"/Users/sathvika/Documents/DALI/codechallenge/react-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css';\n\nclass Counter extends Component {\n  constructor() {\n    super(); // Error 1\n\n    this.increment = () => {\n      console.log('increment'); //this.state.counter++; // Bad Practice\n\n      this.setState({\n        counter: this.state.counter + this.props.by\n      });\n    };\n\n    this.state = {\n      counter: 0\n    }; //this.increment = this.increment.bind(this); // Don't need with arrow functions\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(CounterButton, {\n      by: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(CounterButton, {\n      by: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(CounterButton, {\n      by: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass CounterButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.render = () => {\n      //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n      return React.createElement(\"div\", {\n        className: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"+\", this.props.by), React.createElement(\"span\", {\n        className: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.counter));\n    };\n  }\n\n}\n\nCounterButton.defaultProps = {\n  by: 1\n};\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"sources":["/Users/sathvika/Documents/DALI/codechallenge/react-app/src/components/counter/Counter.jsx"],"names":["React","Component","PropTypes","Counter","constructor","increment","console","log","setState","counter","state","props","by","render","CounterButton","defaultProps","propTypes","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAE5BG,EAAAA,WAAW,GAAG;AACV,YADU,CACD;;AADC,SAkBdC,SAlBc,GAkBF,MAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADc,CAEd;;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,GAAqB,KAAKE,KAAL,CAAWC;AAD/B,OAAd;AAGH,KAxBa;;AAEV,SAAKF,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAE;AADA,KAAb,CAFU,CAKV;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAlB2B;;AA8BhC,MAAMC,aAAN,SAA4Bb,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAElCY,MAFkC,GAEzB,MAAM;AACX;AACA,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKR,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmC,KAAKM,KAAL,CAAWC,EAA9C,CADJ,EAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,KAAKF,KAAL,CAAWD,OAApC,CAFJ,CADJ;AAMH,KAViC;AAAA;;AAAA;;AAatCK,aAAa,CAACC,YAAd,GAA6B;AACzBH,EAAAA,EAAE,EAAG;AADoB,CAA7B;AAIAE,aAAa,CAACE,SAAd,GAA0B;AACtBJ,EAAAA,EAAE,EAAGV,SAAS,CAACe;AADO,CAA1B;AAKA,eAAed,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Counter.css'\n\nclass Counter extends Component {\n    \n    constructor() {\n        super(); // Error 1\n        this.state = {\n            counter: 0\n        }\n        //this.increment = this.increment.bind(this); // Don't need with arrow functions\n    }\n\n    render() {\n        return (\n            <div className=\"counter\">\n                <CounterButton by={1}/>\n                <CounterButton by={5}/>\n                <CounterButton by={10}/>\n            </div>\n        )\n    }\n\n    increment = () => {\n        console.log('increment')\n        //this.state.counter++; // Bad Practice\n        this.setState({\n            counter: this.state.counter + this.props.by\n        });\n    }\n\n}\n\nclass CounterButton extends Component {\n    \n    render = () => {\n        //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n        return(\n            <div className=\"counter\">\n                <button onClick={this.increment}>+{this.props.by}</button>\n                <span className=\"count\">{this.state.counter}</span>\n            </div>\n        )\n    }\n}\n\nCounterButton.defaultProps = {\n    by : 1\n}\n\nCounterButton.propTypes = {\n    by : PropTypes.number\n}\n\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}